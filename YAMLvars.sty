% Kale Ewasiuk (kalekje@gmail.com)
% +REVDATE+
% Copyright (C) 2021-2022 Kale Ewasiuk
%
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, including without limitation the rights
% to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
% copies of the Software, and to permit persons to whom the Software is
% furnished to do so, subject to the following conditions:
%
% The above copyright notice and this permission notice shall be included in
% all copies or substantial portions of the Software.
%
% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF
% ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
% TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
% PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT
% SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR
% ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
% ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
% OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
% OR OTHER DEALINGS IN THE SOFTWARE.



\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{YAMLvars}[+REVDATE+]

\IfFileExists{markdown-tinyyaml.lua}{}{\PackageError{YAMLvars}{This package requires installation of the 'markdown' package, please install it and try again}{}}

\RequirePackage{luacode}
\RequirePackage{xspace}
\RequirePackage{etoolbox}
\RequirePackage{penlight} % no option passed here, but extras must be used, error will be thrown if not

\luadirect{YAMLvars = require('YAMLvars')}

\DeclareOption{useyv}{
        \gdef\yv#1{\csname yv--#1\endcsname}
        \luadirect{YAMLvars.prcDefault = 'yvdef'}
}
\DeclareOption{parseCLI}{
      \AtBeginDocument{\luadirect{YAMLvars.doYAMLfiles(YAMLvars.getYAMLcli())}}
}
\DeclareOption{allowundeclared}{
        \luadirect{YAMLvars.allowUndeclared = true}
}
\DeclareOption{overwritedefs}{
        \luadirect{YAMLvars.overwritedefs = true}
}
\DeclareOption{debug}{
        \luadirect{YAMLvars.debug = true}
}

\newcommand{\AllowUndeclaredYV}{\luadirect{YAMLvars.allowUndeclared = true}}
\newcommand{\ForbidUndeclaredYV}{\luadirect{YAMLvars.allowUndeclared = false}}

\DeclareOption*{\PackageWarning{YAMLvars}{Unknown option: '\CurrentOption'}{}}
\ProcessOptions\relax


\newcommand{\declareYAMLvarsFile}[1]{\luadirect{YAMLvars.declareYAMLvarsFile(\luastring{#1})}}
\newcommand{\parseYAMLvarsFile}[1]{\luadirect{YAMLvars.parseYAMLvarsFile(\luastring{#1})}}


\newenvironment{declareYAMLvars}{\luadirect{pl.tex.startrecording()}}{\luadirect{pl.tex.stoprecording()}
        \luadirect{YAMLvars.declareYAMLvarsStr(pl.tex.recordedbuf)}
}

\newenvironment{parseYAMLvars}{\luadirect{pl.tex.startrecording()}}{\luadirect{pl.tex.stoprecording()}
}
\AfterEndEnvironment{parseYAMLvars}{\luadirect{YAMLvars.parseYAMLvarsStr(pl.tex.recordedbuf)}}
% necessary hack to get rohead and lohead to work..
% .. https://tex.stackexchange.com/questions/637018/setting-koma-heading-within-lua/637021?noredirect=1#comment1587387_637021

\newcommand{\resetYAMLvarsspec}{\luadirect{YAMLvars.varspec = {}}}


\newcommand{\lowercasevarYVon}{\luadirect{YAMLvars.lowvasevarall = true}}
\newcommand{\lowercasevarYVoff}{\luadirect{YAMLvars.lowvasevarall = false}}



\newenvironment{parseYAMLpdfdata}{\luadirect{pl.tex.startrecording()}}{
  \luadirect{pl.tex.stoprecording()
  YAMLvars.yaml2PDFmetadata(pl.tex.recordedbuf)
  pl.tex.writePDFmetadata()
  }
}

